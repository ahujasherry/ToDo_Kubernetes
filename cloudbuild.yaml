steps:
  # Step 1: Build the Docker image using the Dockerfile in the repository
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/to-do-418823/typescriptto-repository/typescript-app:v1, '.']

  # Step 2: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/to-do-418823/typescriptto-repository/typescript-app:v1']

    # Step 3: Set up kubectl to use the cluster's credentials
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['container', 'clusters', 'get-credentials', 'todo-cluster', '--zone', 'us-central1-a', '--project', 'to-do-418823']


  # Step 4: Apply the Kubernetes deployment manifest
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/deployment.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=todo-cluster'
      - 'CLOUDSDK_CORE_PROJECT=to-do-418823'

  # Step 5: Apply the Kubernetes service manifest
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/service.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=todo-cluster'
      - 'CLOUDSDK_CORE_PROJECT=to-do-418823'

  # Step 6: Apply the MongoDB Kubernetes deployment manifest
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/mongodb-deployment.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=todo-cluster'
      - 'CLOUDSDK_CORE_PROJECT=to-do-418823'

  # Step 7: Apply the MongoDB Kubernetes service manifest
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/mongodb-service.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=todo-cluster'
      - 'CLOUDSDK_CORE_PROJECT=to-do-418823'

images:
  - 'us-central1-docker.pkg.dev/to-do-418823/typescriptto-repository/typescript-app:tag1'
